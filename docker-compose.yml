version: "3.3"

services:
  db:
    container_name: container-db
    image: compose-example:db
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DB: ${DATABASE_DB}
      DATABASE_PORT: ${DATABASE_PORT}
    ports:
      - "5433:5433"
    networks:
      - internal-network

  redis:
    container_name: tcc-redis
    image: compose-example:redis
    build:
      context: ./redis
      dockerfile: Dockerfile
    environment:
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - internal-network

  quarkus:
    container_name: container-quarkus
    image: compose-example:quarkus
    build:
      context: ./quarkus
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: jdbc:postgresql://db:5433/${DATABASE_DB}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      QUARKUS_PORT: ${QUARKUS_PORT}
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    networks:
      - internal-network

  node:
    container_name: container-node
    image: compose-example:node
    build:
      context: ./node
      dockerfile: Dockerfile
    environment:
      QUARKUS_PORT: ${QUARKUS_PORT}
      QUARKUS_URL: backend
      QUARKUS_BASEURL: http://backend:3000
      API_BACKEND_LOGIN: ${DATABASE_USER}
      API_BACKEND_PASSWORD: ${DATABASE_PASSWORD}
      NODE_PORT: ${NODE_PORT}
    networks:
      - internal-network

  react:
    container_name: container-react
    image: compose-example:react
    build:
      context: ./react
      dockerfile: Dockerfile
    environment:
      QUARKUS_PORT: ${QUARKUS_PORT}
      QUARKUS_URL: backend
      QUARKUS_BASEURL: http://backend:3000
      API_BACKEND_LOGIN: ${DATABASE_USER}
      API_BACKEND_PASSWORD: ${DATABASE_PASSWORD}
      REACT_PORT: ${REACT_PORT}
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    networks:
      - internal-network

networks:
  internal-network:
    driver: bridge
